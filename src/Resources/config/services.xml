<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="chaos_monkey.settings" class="Chaos\Monkey\Symfony\Settings" public="false">
        </service>

        <service id="chaos_monkey" class="Chaos\Monkey\Symfony\ChaosMonkey" public="true">
            <argument type="tagged_iterator" tag="chaos_monkey.assault"/>
            <argument type="service" id="chaos_monkey.settings" />
        </service>

        <service id="chaos_monkey.watcher.request" class="Chaos\Monkey\Symfony\Watcher\RequestWatcher" public="false">
            <argument type="service" id="chaos_monkey" />
        </service>

        <instanceof id="Chaos\Monkey\Symfony\Assault" autowire="true">
            <tag name="chaos_monkey.assault"/>
        </instanceof>

        <service id="chaos_monkey.assault.latency" class="Chaos\Monkey\Symfony\Assault\LatencyAssault" public="false">
            <argument type="service" id="chaos_monkey.settings" />
        </service>

        <service id="chaos_monkey.assault.memory" class="Chaos\Monkey\Symfony\Assault\MemoryAssault" public="false">
            <argument type="service" id="chaos_monkey.settings" />
        </service>

        <service id="chaos_monkey.assault.memory" class="Chaos\Monkey\Symfony\Assault\ExceptionAssault" public="false">
            <argument type="service" id="chaos_monkey.settings" />
        </service>

        <service id="chaos_monkey.assault.memory" class="Chaos\Monkey\Symfony\Assault\KillAppAssault" public="false">
            <argument type="service" id="chaos_monkey.settings" />
        </service>
    </services>
</container>
